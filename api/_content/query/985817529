[{"_path":"/api/components/markdown","_draft":false,"_partial":false,"_empty":false,"title":"<Markdown>","description":"The fastest way to inject Markdown into your Vue components.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"<Markdown>"}]},{"type":"text","value":" component makes it easier to use Markdown syntax in your Vue components."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is useful when creating components that you want to use in your Markdown content."}]},{"type":"element","tag":"h2","props":{"id":"props"},"children":[{"type":"text","value":"Props"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"use"}]},{"type":"text","value":": The slot to bind on, you must provide a "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"use"}]},{"type":"text","value":" via "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$slots.{your_slot}"}]},{"type":"text","value":" in "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"<template>"}]},{"type":"text","value":"."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Function"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$slots.default"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Warning"}]},{"type":"text","value":": Using a plain string won't let you profit from reactivity for that component."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"unwrap"}]},{"type":"text","value":": Whether to unwrap the content or not. This is useful when you want to extract the content nested in native Markdown syntax. Each specified tag will get removed from AST."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Boolean"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"'ul li'"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"code","props":{"code":"<template>\n  <h2 class=\"fancy-header\"><Markdown :use=\"$slots.default\" unwrap=\"p\" /></h2>\n</template>\n","filename":"components/FancyHeader.vue","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <h2 class=\"fancy-header\"><Markdown :use=\"$slots.default\" unwrap=\"p\" /></h2>\n</template>\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"::fancy-header\nThat text paragraph will be unwrapped.\n::\n","filename":"content/index.md","language":"md"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"::fancy-header\nThat text paragraph will be unwrapped.\n::\n"}]}]}]}]},"_type":"markdown","_id":"content:4.api:1.components:5.markdown.md","_source":"content","_file":"4.api/1.components/5.markdown.md","_extension":"md"},{"_path":"/api/composables/query-content","_draft":false,"_partial":false,"_empty":false,"title":"queryContent()","description":"The queryContent composable provides methods for querying and fetching your contents.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a query builder to search contents."}]},{"type":"element","tag":"code","props":{"code":"// Create a query looking for anything in content/ directory\nconst contentQuery = queryContent()\n\n// Create a query looking into content/articles directory\nconst contentQuery = queryContent('articles')\n\n// Create a query looking into content/articles/nuxt3 directory\nconst contentQuery = queryContent('articles', 'nuxt3')\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Create a query looking for anything in content/ directory\nconst contentQuery = queryContent()\n\n// Create a query looking into content/articles directory\nconst contentQuery = queryContent('articles')\n\n// Create a query looking into content/articles/nuxt3 directory\nconst contentQuery = queryContent('articles', 'nuxt3')\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"wherequery"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"where(query)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"query"}]},{"type":"text","value":":"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Partial<QueryBuilderParams>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Filter results by query."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Where queries are based on subset of "},{"type":"element","tag":"a","props":{"href":"https://www.mongodb.com/docs/manual/reference/operator/query","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Mongo query syntax"}]},{"type":"text","value":", it handles: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$eq"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$ne"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$gt"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$gte"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$lt"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$lte"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$in"}]}]},{"type":"element","tag":"code","props":{"code":"// Implicit (assumes $eq operator)\nconst articles = await queryContent('articles').where({ title: 'Home' }).findOne()\n\n// Explicit $eq\nconst articles = await queryContent('articles').where({ title: { $eq: 'Home' } }).findOne()\n\n// $gt\nconst articles = await queryContent('articles').where({ age: { $gt: 18 } }).find()\n\n// $in\nconst articles = await queryContent('articles').where({ name: { $in: ['odin', 'thor'] } }).find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Implicit (assumes $eq operator)\nconst articles = await queryContent('articles').where({ title: 'Home' }).findOne()\n\n// Explicit $eq\nconst articles = await queryContent('articles').where({ title: { $eq: 'Home' } }).findOne()\n\n// $gt\nconst articles = await queryContent('articles').where({ age: { $gt: 18 } }).find()\n\n// $in\nconst articles = await queryContent('articles').where({ name: { $in: ['odin', 'thor'] } }).find()\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to filter in objects and array you can use nested properties style:"}]},{"type":"element","tag":"code","props":{"code":"const products = await queryContent('products').where({ 'categories': { $contains: 'top' } }).find()\n\nconst products = await queryContent('products').where({ 'categories': { $contains: ['top', 'woman'] } }).find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const products = await queryContent('products').where({ 'categories': { $contains: 'top' } }).find()\n\nconst products = await queryContent('products').where({ 'categories': { $contains: ['top', 'woman'] } }).find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"sortoptions"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sort(options)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"options"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sort results by a field or fields."}]},{"type":"element","tag":"code","props":{"code":"// Sort by title ascending\nconst articles = await queryContent('articles')\n  .sort({ title: 1 })\n  .find()\n\n// Sort by title ascending first then sort by category descending\nconst articles = await queryContent('articles')\n  .sort({ title: 1, category: 0 })\n  .find()\n// OR\nconst articles = await queryContent('articles')\n  .sort({ title: 1 })\n  .sort({ category: 0 })\n  .find()\n\n// Sort by nested field\nconst articles = await queryContent('articles')\n  .sort({ 'category.title': 1 })\n  .find()\n\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Sort by title ascending\nconst articles = await queryContent('articles')\n  .sort({ title: 1 })\n  .find()\n\n// Sort by title ascending first then sort by category descending\nconst articles = await queryContent('articles')\n  .sort({ title: 1, category: 0 })\n  .find()\n// OR\nconst articles = await queryContent('articles')\n  .sort({ title: 1 })\n  .sort({ category: 0 })\n  .find()\n\n// Sort by nested field\nconst articles = await queryContent('articles')\n  .sort({ 'category.title': 1 })\n  .find()\n\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"sort()"}]},{"type":"text","value":" method does "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"case-sensitive"}]},{"type":"text","value":" sort by default. There is some magical options you can pass to sort options to change sort behavior, like sorting "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"case-insensitive"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$sensitivity"}]},{"type":"text","value":": Change case sensitivity. Like using "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$sensitivity: 'base'"}]},{"type":"text","value":" for case-insensitive sort"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$numeric"}]},{"type":"text","value":": Whether numeric collation should be used, such that "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"1\" < \"2\" < \"10\""}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$caseFirst"}]},{"type":"text","value":": Whether upper case or lower case should sort first."}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These options are given to "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator/Collator#parameters","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Intl.Collator()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"limitcount"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"limit(count)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"count"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Number"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Limit number of results."}]},{"type":"element","tag":"code","props":{"code":"// fetch only 5 articles\nconst articles = await queryContent('articles').limit(5).find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// fetch only 5 articles\nconst articles = await queryContent('articles').limit(5).find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"skipcount"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"skip(count)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"count"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Number"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Skip results."}]},{"type":"element","tag":"code","props":{"code":"// fetch the next 5 articles\nconst articles = await queryContent('articles')\n    .skip(5)\n    .limit(5)\n    .find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// fetch the next 5 articles\nconst articles = await queryContent('articles')\n    .skip(5)\n    .limit(5)\n    .find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"withoutkeys"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"without(keys)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"keys"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Remove a subset of fields."}]},{"type":"element","tag":"code","props":{"code":"const articles = await queryContent('articles').without('unused-key').find()\n\nconst articles = await queryContent('articles').without(['unused-key', 'another-unused-key']).find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const articles = await queryContent('articles').without('unused-key').find()\n\nconst articles = await queryContent('articles').without(['unused-key', 'another-unused-key']).find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"onlykeys"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"only(keys)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"keys"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Select a subset of fields."}]},{"type":"element","tag":"code","props":{"code":"const articles = await queryContent('articles').only('id').find()\n\nconst articles = await queryContent('articles').only(['id', 'title']).find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const articles = await queryContent('articles').only('id').find()\n\nconst articles = await queryContent('articles').only(['id', 'title']).find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"find"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"find()"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fetch and return the list of matched contents based on the query."}]},{"type":"element","tag":"code","props":{"code":"// List of articles\nconst articles = await queryContent('articles').find()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// List of articles\nconst articles = await queryContent('articles').find()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"findone"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"findOne()"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fetch first matched content."}]},{"type":"element","tag":"code","props":{"code":"const firstArticle = await queryContent('articles').findOne()\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const firstArticle = await queryContent('articles').findOne()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"findsurroundpath-options"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"findSurround(path, options)"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"path"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Required"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"options"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"{ before: number, after: number }"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"{ before: 1, after: 1 }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get previous and next results around a specific path."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will always obtain an array of fixed length filled with the matching document or null."}]},{"type":"element","tag":"code","props":{"code":"const [prev, next] = await queryContent('articles')\n  .only(['_path', 'title'])\n  .sort({ date: 1})\n  .where({ isArchived: false })\n  .findSurround('article-2')\n\n// Returns\n[\n  {\n    title: 'Article 1',\n    path: 'article-1'\n  },\n  null // no article-3 here\n]\n","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [prev, next] = await queryContent('articles')\n  .only(['_path', 'title'])\n  .sort({ date: 1})\n  .where({ isArchived: false })\n  .findSurround('article-2')\n\n// Returns\n[\n  {\n    title: 'Article 1',\n    path: 'article-1'\n  },\n  null // no article-3 here\n]\n"}]}]}]}]},"_type":"markdown","_id":"content:4.api:2.composables:1.query-content.md","_source":"content","_file":"4.api/2.composables/1.query-content.md","_extension":"md"}]