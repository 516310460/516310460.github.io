[{"_path":"/api/components/content-navigation","_draft":false,"_partial":false,"_empty":false,"title":"<ContentNavigation>","description":"Building complex navigation from your content has never been easier.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"<ContentNavigation>"}]},{"type":"text","value":" is a renderless component shortening the access to "},{"type":"element","tag":"a","props":{"href":"/guide/displaying/navigation"},"children":[{"type":"text","value":"the navigation"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"props"},"children":[{"type":"text","value":"Props"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"query"}]},{"type":"text","value":": A query to be passed to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"fetchContentNavigation()"}]},{"type":"text","value":"."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"QueryBuilderParams | QueryBuilder"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"undefined"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"slots"},"children":[{"type":"text","value":"Slots"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" slot can be used to render the content with "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"v-slot=\"{ navigation }\""}]},{"type":"text","value":" syntax."}]},{"type":"element","tag":"code","props":{"code":"<template>\n  <nav>\n    <ContentNavigation v-slot=\"{ navigation }\">\n      <div v-for=\"link of navigation\" :key=\"link._path\">\n        <NuxtLink :to=\"link._path\">{{ link.title }}</NuxtLink>\n      </div>\n    </ContentNavigation>\n  </nav>\n</template>\n","filename":"components/Navbar.vue","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <nav>\n    <ContentNavigation v-slot=\"{ navigation }\">\n      <div v-for=\"link of navigation\" :key=\"link._path\">\n        <NuxtLink :to=\"link._path\">{{ link.title }}</NuxtLink>\n      </div>\n    </ContentNavigation>\n  </nav>\n</template>\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"query"},"children":[{"type":"text","value":"Query"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By providing the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"query"}]},{"type":"text","value":" prop you can customise the content used for navigation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here we pass along a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"QueryBuilder"}]},{"type":"text","value":" instance."}]},{"type":"element","tag":"code","props":{"code":"<script setup>\nconst catsQuery = queryContent('cats')\n/*\n// If you'd prefer to pass along raw `QueryBuilderParams`:\nconst catsQuery = {\n  where: [\n    { _path: /^\\/cats/ },\n  ],\n}\n*/\n</script>\n\n<template>\n<ContentNavigation v-slot=\"{ navigation }\" :query=\"catsQuery\">\n  <NuxtLink\n    v-for=\"link of navigation\"\n    :key=\"link._path\"\n    :to=\"link._path\"\n  >\n    {{ link.navTitle || link.title }}\n  </NuxtLink>\n</ContentNavigation>\n</template>\n","language":"vue"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup>\nconst catsQuery = queryContent('cats')\n/*\n// If you'd prefer to pass along raw `QueryBuilderParams`:\nconst catsQuery = {\n  where: [\n    { _path: /^\\/cats/ },\n  ],\n}\n*/\n</script>\n\n<template>\n<ContentNavigation v-slot=\"{ navigation }\" :query=\"catsQuery\">\n  <NuxtLink\n    v-for=\"link of navigation\"\n    :key=\"link._path\"\n    :to=\"link._path\"\n  >\n    {{ link.navTitle || link.title }}\n  </NuxtLink>\n</ContentNavigation>\n</template>\n"}]}]}]}]},"_type":"markdown","_id":"content:4.api:1.components:3.content-navigation.md","_source":"content","_file":"4.api/1.components/3.content-navigation.md","_extension":"md"},{"_path":"/api/components/markdown","_draft":false,"_partial":false,"_empty":false,"title":"<Markdown>","description":"The fastest way to inject Markdown into your Vue components.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"<Markdown>"}]},{"type":"text","value":" component makes it easier to use Markdown syntax in your Vue components."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is useful when creating components that you want to use in your Markdown content."}]},{"type":"element","tag":"h2","props":{"id":"props"},"children":[{"type":"text","value":"Props"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"use"}]},{"type":"text","value":": The slot to bind on, you must provide a "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"use"}]},{"type":"text","value":" via "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$slots.{your_slot}"}]},{"type":"text","value":" in "},{"type":"element","tag":"code-inline","props":{"lang":"html"},"children":[{"type":"text","value":"<template>"}]},{"type":"text","value":"."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Function"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"$slots.default"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Warning"}]},{"type":"text","value":": Using a plain string won't let you profit from reactivity for that component."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"unwrap"}]},{"type":"text","value":": Whether to unwrap the content or not. This is useful when you want to extract the content nested in native Markdown syntax. Each specified tag will get removed from AST."},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"Boolean"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Example: "},{"type":"element","tag":"code-inline","props":{"lang":"ts"},"children":[{"type":"text","value":"'ul li'"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"code","props":{"code":"<template>\n  <h2 class=\"fancy-header\"><Markdown :use=\"$slots.default\" unwrap=\"p\" /></h2>\n</template>\n","filename":"components/FancyHeader.vue","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <h2 class=\"fancy-header\"><Markdown :use=\"$slots.default\" unwrap=\"p\" /></h2>\n</template>\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"::fancy-header\nThat text paragraph will be unwrapped.\n::\n","filename":"content/index.md","language":"md"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"::fancy-header\nThat text paragraph will be unwrapped.\n::\n"}]}]}]}]},"_type":"markdown","_id":"content:4.api:1.components:5.markdown.md","_source":"content","_file":"4.api/1.components/5.markdown.md","_extension":"md"}]