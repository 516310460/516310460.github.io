[{"_path":"/guide/recipes/sitemap","_draft":false,"_partial":false,"_empty":false,"title":"Sitemap","description":"A sitemap file is useful for helping Google to better index your website, ensuring that the content you write can be visible on search results.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This can be created utilising the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sitemap"}]},{"type":"text","value":" library, so you'll need to install that which can be done like so:"}]},{"type":"element","tag":"code","props":{"code":"yarn add --dev sitemap\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev sitemap\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"server-route"},"children":[{"type":"text","value":"Server Route"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We will be utilising the "},{"type":"element","tag":"a","props":{"href":"https://v3.nuxtjs.org/guide/features/server-routes","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"server routes"}]},{"type":"text","value":" available within Nuxt, and to do so you'll need to create the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server/"}]},{"type":"text","value":" directory within your websites root directly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once this is done, create a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"routes/"}]},{"type":"text","value":" directory inside this, and add a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sitemap.xml.ts"}]},{"type":"text","value":" file, this will translate to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/sitemap.xml"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You'll need to add the following:"}]},{"type":"element","tag":"code","props":{"code":"import { serverQueryContent } from '#content/server'\nimport { SitemapStream, streamToPromise } from 'sitemap'\n\nexport default defineEventHandler(async (event) => {\n  // Fetch all documents\n  const docs = await serverQueryContent(event).find()\n  const sitemap = new SitemapStream({\n    hostname: 'https://example.com'\n  })\n\n  for (const doc of docs) {\n    sitemap.write({\n      url: doc._path,\n      changefreq: 'monthly'\n    })\n  }\n  sitemap.end()\n\n  return streamToPromise(sitemap)\n})\n","filename":"server/routes/sitemap.xml.ts","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { serverQueryContent } from '#content/server'\nimport { SitemapStream, streamToPromise } from 'sitemap'\n\nexport default defineEventHandler(async (event) => {\n  // Fetch all documents\n  const docs = await serverQueryContent(event).find()\n  const sitemap = new SitemapStream({\n    hostname: 'https://example.com'\n  })\n\n  for (const doc of docs) {\n    sitemap.write({\n      url: doc._path,\n      changefreq: 'monthly'\n    })\n  }\n  sitemap.end()\n\n  return streamToPromise(sitemap)\n})\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, once users go to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://example.com/sitemap.xml"}]},{"type":"text","value":", you'll find the generated XML file with all your pages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When using "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":", you may want to pre-render the sitemap since the server route won't be able to run on a static hosting."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can do this using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nitro.prerender"}]},{"type":"text","value":" option in your "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt.config"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"import { defineNuxtConfig } from 'nuxt'\n\nexport default defineNuxtConfig({\n  // ...\n  nitro: {\n    prerender: {\n      routes: ['/sitemap.xml']\n    }\n  }\n})\n","filename":"nuxt.config.ts","language":"ts"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { defineNuxtConfig } from 'nuxt'\n\nexport default defineNuxtConfig({\n  // ...\n  nitro: {\n    prerender: {\n      routes: ['/sitemap.xml']\n    }\n  }\n})\n"}]}]}]}]},"_type":"markdown","_id":"content:3.guide:3.recipes:1.sitemap.md","_source":"content","_file":"3.guide/3.recipes/1.sitemap.md","_extension":"md"},{"_path":"/guide/migration/edge-channel","_draft":false,"_partial":false,"_empty":false,"title":"Edge Channel","description":"Nuxt Content is landing commits, improvements, and bug fixes every day. You can opt-in to test them earlier before the next release.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After each commit is merged into the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" branch of "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/content","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"nuxt/content"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"passing all tests"}]},{"type":"text","value":", we trigger an automated npm release using Github Actions publishing a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content-edge"}]},{"type":"text","value":" package."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can opt in to use this release channel and avoid waiting for the next release and helping the module by beta testing changes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The build and publishing method and quality of edge releases are the same as stable ones. The only difference is that you should often check the "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/content","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"GitHub repository"}]},{"type":"text","value":" for updates. There is a slight chance of regressions not being caught during the review process and by the automated tests. Therefore, we internally use this channel to double-check everything before each release."}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Features only available on the edge channel are marked with an alert in the documentation."}]}]},{"type":"element","tag":"h2","props":{"id":"opting-into-the-edge-channel"},"children":[{"type":"text","value":"Opting into the edge channel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Update "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" dependency inside "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"package.json"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"{\n  \"devDependencies\": {\n--    \"@nuxt/content\": \"^2.0.0\"\n++    \"@nuxt/content\": \"npm:@nuxt/content-edge@latest\"\n  }\n}\n","filename":"package.json","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"devDependencies\": {\n--    \"@nuxt/content\": \"^2.0.0\"\n++    \"@nuxt/content\": \"npm:@nuxt/content-edge@latest\"\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Remove lockfile ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"package-lock.json"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"yarn.lock"}]},{"type":"text","value":", or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"pnpm-lock.yaml"}]},{"type":"text","value":") and reinstall dependencies."}]},{"type":"element","tag":"h2","props":{"id":"opting-out-from-the-edge-channel"},"children":[{"type":"text","value":"Opting out from the edge channel"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Update "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" dependency inside "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"package.json"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"{\n  \"devDependencies\": {\n--    \"@nuxt/content\": \"npm:@nuxt/content-edge@latest\"\n++    \"@nuxt/content\": \"^2.0.0\"\n  }\n}\n","filename":"package.json","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"devDependencies\": {\n--    \"@nuxt/content\": \"npm:@nuxt/content-edge@latest\"\n++    \"@nuxt/content\": \"^2.0.0\"\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Remove lockfile ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"package-lock.json"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"yarn.lock"}]},{"type":"text","value":", or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"pnpm-lock.yaml"}]},{"type":"text","value":") and reinstall dependencies."}]}]},"_type":"markdown","_id":"content:3.guide:4.migration:2.edge-channel.md","_source":"content","_file":"3.guide/4.migration/2.edge-channel.md","_extension":"md"}]