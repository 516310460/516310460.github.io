[{"_path":"/v1/getting-started/installation","_draft":false,"_partial":false,"_empty":false,"title":"Installation","description":"Install @nuxt/content in only two steps in your Nuxt project.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" dependency to your project:"}]},{"type":"element","tag":"code-group","props":{},"children":[{"type":"element","tag":"code","props":{"code":"yarn add @nuxt/content\n","filename":"Yarn","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add @nuxt/content\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"npm install @nuxt/content\n","filename":"NPM","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install @nuxt/content\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, add "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" to the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"modules"}]},{"type":"text","value":" section of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt.config.js"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"{\n  modules: [\n    '@nuxt/content'\n  ],\n  content: {\n    // Options\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  modules: [\n    '@nuxt/content'\n  ],\n  content: {\n    // Options\n  }\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"typescript"},"children":[{"type":"text","value":"TypeScript"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the types to your \"types\" array in tsconfig.json after the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/types"}]},{"type":"text","value":" (Nuxt 2.9.0+) or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/vue-app"}]},{"type":"text","value":" entry."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"tsconfig.json"}]}]},{"type":"element","tag":"code","props":{"code":"{\n  \"compilerOptions\": {\n    \"types\": [\n      \"@nuxt/types\",\n      \"@nuxt/content\"\n    ]\n  }\n}\n","language":"json"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n  \"compilerOptions\": {\n    \"types\": [\n      \"@nuxt/types\",\n      \"@nuxt/content\"\n    ]\n  }\n}\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Why?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because of the way Nuxt works the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$content"}]},{"type":"text","value":" property on the context has to be merged into the Nuxt "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Context"}]},{"type":"text","value":" interface via "},{"type":"element","tag":"a","props":{"href":"https://www.typescriptlang.org/docs/handbook/declaration-merging.html","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"declaration merging"}]},{"type":"text","value":". Adding "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" to your types will import the types from the package and make TypeScript aware of the additions to the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Context"}]},{"type":"text","value":" interface."}]}]}]},"_type":"markdown","_id":"v1:v1:1.getting-started:2.installation.md","_source":"v1","_file":"v1/1.getting-started/2.installation.md","_extension":"md"},{"_path":"/v1/getting-started/fetching","_draft":false,"_partial":false,"_empty":false,"title":"Fetching content","description":"Learn how to fetch your static content with $content in your Nuxt.js project.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module globally injects "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$content"}]},{"type":"text","value":" instance, meaning that you can access it anywhere using "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"this.$content"}]},{"type":"text","value":". For plugins, asyncData, nuxtServerInit and Middleware, you can access it from "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"context.$content"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"methods"},"children":[{"type":"text","value":"Methods"}]},{"type":"element","tag":"h3","props":{"id":"contentpath-options"},"children":[{"type":"text","value":"$content(path, options?)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"path"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"options"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.3.0"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"options.deep"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.3.0"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Fetch files from subdirectories"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"options.text"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.4.0"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Returns the original markdown content in a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"text"}]},{"type":"text","value":" variable"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Returns a chain sequence"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also give multiple arguments: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$content('articles', params.slug)"}]},{"type":"text","value":" will be translated to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/articles/${params.slug}"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"path"}]},{"type":"text","value":" can be a file or a directory. If "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"path"}]},{"type":"text","value":" is a file, "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"fetch()"}]},{"type":"text","value":" will return an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]},{"type":"text","value":", if it's a directory it will return an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All the methods below can be chained and return a chain sequence, except "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"fetch"}]},{"type":"text","value":" which returns a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Promise"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"onlykeys"},"children":[{"type":"text","value":"only(keys)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"keys"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Select a subset of fields."}]},{"type":"element","tag":"code","props":{"code":"const { title } = await this.$content('article-1').only(['title']).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { title } = await this.$content('article-1').only(['title']).fetch()\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"withoutkeys"},"children":[{"type":"text","value":"without(keys)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"keys"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Remove a subset of fields."}]},{"type":"element","tag":"code","props":{"code":"const { title, ...propsWithoutBody } = await this.$content('article-1').without(['body']).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const { title, ...propsWithoutBody } = await this.$content('article-1').without(['body']).fetch()\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"wherequery"},"children":[{"type":"text","value":"where(query)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"query"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Filter results by query."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Where queries are based on subset of mongo query syntax, it handles for example: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$eq"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$ne"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$gt"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$gte"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$lt"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$lte"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$in"}]},{"type":"text","value":", ..."}]},{"type":"element","tag":"code","props":{"code":"// implicit (assumes $eq operator)\nconst articles = await this.$content('articles').where({ title: 'Home' }).fetch()\n// explicit $eq\nconst articles = await this.$content('articles').where({ title: { $eq: 'Home' } }).fetch()\n\n// $gt\nconst articles = await this.$content('articles').where({ age: { $gt: 18 } }).fetch()\n// $in\nconst articles = await this.$content('articles').where({ name: { $in: ['odin', 'thor'] } }).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// implicit (assumes $eq operator)\nconst articles = await this.$content('articles').where({ title: 'Home' }).fetch()\n// explicit $eq\nconst articles = await this.$content('articles').where({ title: { $eq: 'Home' } }).fetch()\n\n// $gt\nconst articles = await this.$content('articles').where({ age: { $gt: 18 } }).fetch()\n// $in\nconst articles = await this.$content('articles').where({ name: { $in: ['odin', 'thor'] } }).fetch()\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to filter in objects and array you need to enable nestedProperties, see "},{"type":"element","tag":"a","props":{"href":"/configuration#nestedproperties"},"children":[{"type":"text","value":"configuration"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"const products = await this.$content('products').where({ 'categories.slug': { $contains: 'top' } }).fetch()\n\nconst products = await this.$content('products').where({ 'categories.slug': { $contains: ['top', 'woman'] } }).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const products = await this.$content('products').where({ 'categories.slug': { $contains: 'top' } }).fetch()\n\nconst products = await this.$content('products').where({ 'categories.slug': { $contains: ['top', 'woman'] } }).fetch()\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module uses LokiJS under the hood, you can check for "},{"type":"element","tag":"a","props":{"href":"https://github.com/techfort/LokiJS/wiki/Query-Examples#find-queries","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"query examples"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h3","props":{"id":"sortbykey-direction"},"children":[{"type":"text","value":"sortBy(key, direction)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"key"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"direction"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Value: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'asc'"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'desc'"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'asc'"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sort results by key."}]},{"type":"element","tag":"code","props":{"code":"const articles = await this.$content('articles').sortBy('title').fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const articles = await this.$content('articles').sortBy('title').fetch()\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Can be chained multiple times to sort on multiple fields."}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sortBy"}]},{"type":"text","value":" method does "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"case-sensitive"}]},{"type":"text","value":" sort, which is currently not configurable."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you need case-insensitive sorting, check out "},{"type":"element","tag":"a","props":{"href":"/snippets#case-insensitive-sorting"},"children":[{"type":"text","value":"this snippet"}]},{"type":"text","value":" on how to work around it."}]}]},{"type":"element","tag":"h3","props":{"id":"limitn"},"children":[{"type":"text","value":"limit(n)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Number"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Limit number of results."}]},{"type":"element","tag":"code","props":{"code":"// fetch only 5 articles\nconst articles = await this.$content('articles').limit(5).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// fetch only 5 articles\nconst articles = await this.$content('articles').limit(5).fetch()\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"skipn"},"children":[{"type":"text","value":"skip(n)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Number"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Skip results."}]},{"type":"element","tag":"code","props":{"code":"// fetch the next 5 articles\nconst articles = await this.$content('articles').skip(5).limit(5).fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// fetch the next 5 articles\nconst articles = await this.$content('articles').skip(5).limit(5).fetch()\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"searchfield-value"},"children":[{"type":"text","value":"search(field, value)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"field"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"value"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Performs a full-text search on a field. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" is optional, in this case "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"field"}]},{"type":"text","value":" is the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" and search will be performed on all defined full-text search fields."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The fields you want to search on must be defined in options in order to be indexed, see "},{"type":"element","tag":"a","props":{"href":"/configuration#fulltextsearchfields"},"children":[{"type":"text","value":"configuration"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using an empty string as parameter will skip the search."}]},{"type":"element","tag":"code","props":{"code":"// Search on field title\nconst articles = await this.$content('articles').search('title', 'welcome').fetch()\n// Search on all pre-defined fields\nconst articles = await this.$content('articles').search('welcome').fetch()\n// Search will be skipped if the search string is empty\nconst articles = await this.$content('articles').search('').fetch()\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Search on field title\nconst articles = await this.$content('articles').search('title', 'welcome').fetch()\n// Search on all pre-defined fields\nconst articles = await this.$content('articles').search('welcome').fetch()\n// Search will be skipped if the search string is empty\nconst articles = await this.$content('articles').search('').fetch()\n"}]}]}]},{"type":"element","tag":"alert","props":{"type":"info"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Check out "},{"type":"element","tag":"a","props":{"href":"/snippets#search"},"children":[{"type":"text","value":"this snippet"}]},{"type":"text","value":" on how to implement search into your app"}]}]},{"type":"element","tag":"h3","props":{"id":"surroundslugorpath-options"},"children":[{"type":"text","value":"surround(slugOrPath, options)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"slugOrPath"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"required"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"options"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{ before: 1, after: 1}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get prev and next results around a specific slug or path."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You will always obtain an array of fixed length filled with the maching document or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"const [prev, next] = await this.$content('articles')\n  .only(['title', 'path'])\n  .sortBy('date')\n  .where({ isArchived: false })\n  .surround('article-2')\n  .fetch()\n\n// Returns\n[\n  {\n    title: 'Article 1',\n    path: 'article-1'\n  },\n  null // no article-3 here\n]\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const [prev, next] = await this.$content('articles')\n  .only(['title', 'path'])\n  .sortBy('date')\n  .where({ isArchived: false })\n  .surround('article-2')\n  .fetch()\n\n// Returns\n[\n  {\n    title: 'Article 1',\n    path: 'article-1'\n  },\n  null // no article-3 here\n]\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"search"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"limit"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"skip"}]},{"type":"text","value":" are ineffective when using this method."}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Getting results based on "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"path"}]},{"type":"text","value":" is only supported since v1.12.0"}]}]},{"type":"element","tag":"alert","props":{"type":"info"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Check out "},{"type":"element","tag":"a","props":{"href":"/snippets#prev-and-next"},"children":[{"type":"text","value":"this snippet"}]},{"type":"text","value":" on how to implement prev and next links into your app"}]}]},{"type":"element","tag":"h3","props":{"id":"fetch"},"children":[{"type":"text","value":"fetch()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Returns: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Promise<Object>"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Promise<Array>"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ends the chain sequence and collects data."}]},{"type":"element","tag":"h3","props":{"id":"catch"},"children":[{"type":"text","value":"catch()"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Checks if the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".md"}]},{"type":"text","value":" file exists in content directory or not."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It should be inserted after the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"fetch()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"code","props":{"code":"const articles = await this.$content('articles')\n  .only(['title', 'date', 'authors'])\n  .sortBy('date', 'asc')\n  .limit(5)\n  .skip(10)\n  .where({\n    tags: 'testing',\n    isArchived: false,\n    date: { $gt: new Date('2020-03-31') },\n    rating: { $gte: 3 }\n  })\n  .search('welcome')\n  .fetch()\n  .catch((err) => {\n     error({ statusCode: 404, message: 'Page not found' })\n  })\n","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const articles = await this.$content('articles')\n  .only(['title', 'date', 'authors'])\n  .sortBy('date', 'asc')\n  .limit(5)\n  .skip(10)\n  .where({\n    tags: 'testing',\n    isArchived: false,\n    date: { $gt: new Date('2020-03-31') },\n    rating: { $gte: 3 }\n  })\n  .search('welcome')\n  .fetch()\n  .catch((err) => {\n     error({ statusCode: 404, message: 'Page not found' })\n  })\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can check how to use the "},{"type":"element","tag":"a","props":{"href":"/advanced#api-endpoint"},"children":[{"type":"text","value":"Content API"}]},{"type":"text","value":" in development."}]}]}]},"_type":"markdown","_id":"v1:v1:1.getting-started:4.fetching.md","_source":"v1","_file":"v1/1.getting-started/4.fetching.md","_extension":"md"}]