[{"_path":"/v1/getting-started/configuration","_draft":false,"_partial":false,"_empty":false,"title":"Configuration","description":"You can configure @nuxt/content with the content property in your nuxt.config.js.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can configure "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@nuxt/content"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"content"}]},{"type":"text","value":" property in your "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt.config.js"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    // My custom configuration\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    // My custom configuration\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before diving into the individual attributes, please have a look "},{"type":"element","tag":"a","props":{"href":"#defaults"},"children":[{"type":"text","value":"at the default settings"}]},{"type":"text","value":" of the module."}]},{"type":"element","tag":"h2","props":{"id":"merging-defaults"},"children":[{"type":"text","value":"Merging defaults"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can define every option either as function or as static value (primitives, objects, arrays, ...).\nIf you use a function, the default value will be provided as the first argument."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"don't"}]},{"type":"text","value":" use a function to define you properties, the module will try to\nmerge them with the default values. This can be handy for "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.remarkPlugins"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.rehypePlugins"}]},{"type":"text","value":" and so on because\nthe defaults are quite sensible. If you don't want to have the defaults included, just use a function."}]},{"type":"element","tag":"h2","props":{"id":"properties"},"children":[{"type":"text","value":"Properties"}]},{"type":"element","tag":"h3","props":{"id":"apiprefix"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"apiPrefix"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'/_content'"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Route that will be used for client-side API calls and SSE."}]},{"type":"element","tag":"code","props":{"code":"content: {\n  // $content api will be served on localhost:3000/content-api\n  apiPrefix: 'content-api'\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  // $content api will be served on localhost:3000/content-api\n  apiPrefix: 'content-api'\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dir"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"dir"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'content'"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Directory used for writing content.\nYou can give an absolute path, if relative, it will be resolved with Nuxt "},{"type":"element","tag":"a","props":{"href":"https://nuxtjs.org/api/configuration-srcdir","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"srcDir"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"content: {\n  dir: 'my-content' // read content from my-content/\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  dir: 'my-content' // read content from my-content/\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"fulltextsearchfields"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"fullTextSearchFields"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"['title', 'description', 'slug', 'text']"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fields that needs to be indexed to be searchable, learn more about search "},{"type":"element","tag":"a","props":{"href":"/fetching#searchfield-value"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"text"}]},{"type":"text","value":" is a special key that contains your Markdown before being parsed to AST."}]},{"type":"element","tag":"code","props":{"code":"content: {\n  // Only search in title and description\n  fullTextSearchFields: ['title', 'description']\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  // Only search in title and description\n  fullTextSearchFields: ['title', 'description']\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"nestedproperties"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nestedProperties"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[]"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.3.0"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Register nested properties to handle dot-notation and deep filtering."}]},{"type":"element","tag":"code","props":{"code":"content: {\n  nestedProperties: ['categories.slug']\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  nestedProperties: ['categories.slug']\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"liveedit"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"liveEdit"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.5.0"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Disable live edit mode in development:"}]},{"type":"element","tag":"code","props":{"code":"content: {\n  liveEdit: false\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  liveEdit: false\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"markdown"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module uses "},{"type":"element","tag":"a","props":{"href":"https://github.com/remarkjs/remark","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"remark"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/rehypejs/rehype","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"rehype"}]},{"type":"text","value":" under the hood to compile markdown files into JSON AST that will be stored into the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"body"}]},{"type":"text","value":" variable."}]},{"type":"element","tag":"alert","props":{"type":"info"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following explanation is valid for both "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"remarkPlugins"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"rehypePlugins"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To configure how the module will parse Markdown, you can:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add a new plugin to the defaults:"}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: ['remark-emoji']\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: ['remark-emoji']\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Override the default plugins:"}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: () => ['remark-emoji']\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: () => ['remark-emoji']\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use local plugins"}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: [\n        '~/plugins/my-custom-remark-plugin.js'\n      ]\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: [\n        '~/plugins/my-custom-remark-plugin.js'\n      ]\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Provide options directly in the definition"}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: [\n        ['remark-emoji', { emoticon: true }]\n      ]\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: [\n        ['remark-emoji', { emoticon: true }]\n      ]\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Provide options using the name of the plugin in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"camelCase"}]}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      // https://github.com/remarkjs/remark-external-links#options\n      remarkExternalLinks: {\n        target: '_self',\n        rel: 'nofollow'\n      }\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      // https://github.com/remarkjs/remark-external-links#options\n      remarkExternalLinks: {\n        target: '_self',\n        rel: 'nofollow'\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When adding a new plugin, make sure to install it in your dependencies:"}]}]},{"type":"element","tag":"code-group","props":{},"children":[{"type":"element","tag":"code","props":{"code":"yarn add remark-emoji\n","filename":"Yarn","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add remark-emoji\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"npm install remark-emoji\n","filename":"NPM","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install remark-emoji\n"}]}]}]}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: ['remark-emoji']\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    markdown: {\n      remarkPlugins: ['remark-emoji']\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"markdowntocdepth"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.tocDepth"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Number"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.11.0"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can change maximum heading depth to include in the table of contents."}]},{"type":"element","tag":"h3","props":{"id":"markdownremarkplugins"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.remarkPlugins"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"['remark-squeeze-paragraphs', 'remark-slug', 'remark-autolink-headings', 'remark-external-links', 'remark-footnotes']"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.4.0"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can take a look at the list of "},{"type":"element","tag":"a","props":{"href":"https://github.com/remarkjs/remark/blob/master/doc/plugins.md#list-of-plugins","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"remark plugins"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h3","props":{"id":"markdownrehypeplugins"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.rehypePlugins"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Array"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"['rehype-minify-whitespace', 'rehype-sort-attribute-values', 'rehype-sort-attributes', 'rehype-raw']"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">= v1.4.0"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can take a look at the list of "},{"type":"element","tag":"a","props":{"href":"https://github.com/rehypejs/rehype/blob/master/doc/plugins.md#list-of-plugins","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"rehype plugins"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h3","props":{"id":"markdownbaseplugins"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.basePlugins"}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deprecated. Use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.remarkPlugins"}]},{"type":"text","value":" as a function instead."}]}]},{"type":"element","tag":"h3","props":{"id":"markdownplugins"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.plugins"}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Deprecated. Use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.remarkPlugins"}]},{"type":"text","value":" as an array instead."}]}]},{"type":"element","tag":"h3","props":{"id":"markdownprismtheme"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.prism.theme"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"String"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"'prismjs/themes/prism.css'"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module handles code highlighting in markdown content using "},{"type":"element","tag":"a","props":{"href":"https://prismjs.com","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"PrismJS"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It automatically pushes the desired PrismJS theme in your Nuxt.js config, so if you want to use a different theme than the default one, for example "},{"type":"element","tag":"a","props":{"href":"https://github.com/PrismJS/prism-themes","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"prism-themes"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code-group","props":{},"children":[{"type":"element","tag":"code","props":{"code":"yarn add prism-themes\n","filename":"Yarn","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add prism-themes\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"npm install prism-themes\n","filename":"NPM","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install prism-themes\n"}]}]}]}]},{"type":"element","tag":"code","props":{"code":"content: {\n  markdown: {\n    prism: {\n      theme: 'prism-themes/themes/prism-material-oceanic.css'\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  markdown: {\n    prism: {\n      theme: 'prism-themes/themes/prism-material-oceanic.css'\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To disable the inclusion of the theme, set prism to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"false"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"content: {\n  markdown: {\n    prism: {\n      theme: false\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  markdown: {\n    prism: {\n      theme: false\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"markdownhighlighter"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.highlighter"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Highlighter"}]},{"type":"text","value":" | "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"PromisedHighlighter"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":">=1.9.0"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can change the default code highlighter in markdown content by using this option. As an example, we use "},{"type":"element","tag":"a","props":{"href":"https://highlightjs.org/","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"highlight.js"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        // We need to create a wrapper, because\n        // the returned code from highlight.js\n        // is only the highlighted code.\n        return `<pre><code class=\"hljs ${lang}\">${highlightedCode}</code></pre>`\n      }\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        // We need to create a wrapper, because\n        // the returned code from highlight.js\n        // is only the highlighted code.\n        return `<pre><code class=\"hljs ${lang}\">${highlightedCode}</code></pre>`\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"alert","props":{"type":"info"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.highlighter"}]},{"type":"text","value":" is defined, it will automatically disable the inclusion of the Prism theme."}]}]},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't forget to add the corresponding style manually if you define "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"markdown.highlighter"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It returns a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://github.com/syntax-tree/hast","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"HAST"}]},{"type":"text","value":" (Hypertext Abstract Syntax Tree). You can build HAST by passing the 4th argument. It consits of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"u"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang, _, { h, node, u }) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        // We can use ast helper to create the wrapper\n        const childs = []\n        childs.push(\n          h(node, 'pre', [\n            h(node, 'code', { className: ['hljs', lang] }, [\n              u('raw', highlightedCode)\n            ])\n          ])\n        )\n\n        return h(\n          node,\n          'div',\n          { className: 'highlighted-with-highlightjs' },\n          childs\n        )\n      }\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang, _, { h, node, u }) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        // We can use ast helper to create the wrapper\n        const childs = []\n        childs.push(\n          h(node, 'pre', [\n            h(node, 'code', { className: ['hljs', lang] }, [\n              u('raw', highlightedCode)\n            ])\n          ])\n        )\n\n        return h(\n          node,\n          'div',\n          { className: 'highlighted-with-highlightjs' },\n          childs\n        )\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After rendering with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt-content"}]},{"type":"text","value":" component, it will look like this:"}]},{"type":"element","tag":"code","props":{"code":"<div class=\"highlighted-with-highlightjs\">\n  <pre class=\"language-<lang>\">\n    <code>\n      ...\n    </code>\n  </pre>\n</div>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<div class=\"highlighted-with-highlightjs\">\n  <pre class=\"language-<lang>\">\n    <code>\n      ...\n    </code>\n  </pre>\n</div>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also get the line highlight and file name value from the 3rd argument. Combining them with the HAST, you can pass it to the client."}]},{"type":"element","tag":"code","props":{"code":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang, { lineHighlights, fileName }, { h, node, u }) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        const childs = []\n        const props = {\n          className: `language-${lang}`,\n          dataLine: lineHighlights,\n          dataFileName: fileName\n        }\n        childs.push(\n          h(node, 'pre', [\n            h(node, 'code', props, [\n              u('raw', highlightedCode)\n            ])\n          ])\n        )\n\n        return h(\n          node,\n          'div',\n          { className: 'highlighted-with-highlightjs' },\n          childs\n        )\n      }\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import highlightjs from 'highlight.js'\n\nexport default {\n  content: {\n    markdown: {\n      highlighter(rawCode, lang, { lineHighlights, fileName }, { h, node, u }) {\n        const highlightedCode = highlightjs.highlight(rawCode, { language: lang }).value\n\n        const childs = []\n        const props = {\n          className: `language-${lang}`,\n          dataLine: lineHighlights,\n          dataFileName: fileName\n        }\n        childs.push(\n          h(node, 'pre', [\n            h(node, 'code', props, [\n              u('raw', highlightedCode)\n            ])\n          ])\n        )\n\n        return h(\n          node,\n          'div',\n          { className: 'highlighted-with-highlightjs' },\n          childs\n        )\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then the returned code will look like this:"}]},{"type":"element","tag":"code","props":{"code":"<div class=\"highlighted-with-highlightjs\">\n  <pre class=\"language-<lang>\" data-line=\"<line>\" data-file-name=\"<file-name>\">\n    <code>\n      ...\n    </code>\n  </pre>\n</div>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<div class=\"highlighted-with-highlightjs\">\n  <pre class=\"language-<lang>\" data-line=\"<line>\" data-file-name=\"<file-name>\">\n    <code>\n      ...\n    </code>\n  </pre>\n</div>\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can learn more about "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"u"}]},{"type":"text","value":" from "},{"type":"element","tag":"a","props":{"href":"https://github.com/syntax-tree/mdast-util-to-hast","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"mdast-util-to-hast"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://github.com/syntax-tree/unist#node","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Universal Syntax Tree"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/syntax-tree/unist-builder","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"unist-builder"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you need to get the highlighter from promised-returned-package/function, you can do it this way:"}]},{"type":"element","tag":"code","props":{"code":"import { getHighlighter } from 'example-highlighter'\n\nexport default {\n  content: {\n    markdown: {\n      async highlighter() {\n        const highlighter = await getHighlighter()\n\n        return (rawCode, lang) => {\n          return highlighter.highlight(rawCode, { language: lang })\n        }\n      }\n    }\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { getHighlighter } from 'example-highlighter'\n\nexport default {\n  content: {\n    markdown: {\n      async highlighter() {\n        const highlighter = await getHighlighter()\n\n        return (rawCode, lang) => {\n          return highlighter.highlight(rawCode, { language: lang })\n        }\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can head over to "},{"type":"element","tag":"a","props":{"href":"/snippets#custom-highlighter"},"children":[{"type":"text","value":"Snippets - Custom Highlighter"}]},{"type":"text","value":" section to see more example."}]}]},{"type":"element","tag":"h3","props":{"id":"yaml"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"yaml"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module uses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"js-yaml"}]},{"type":"text","value":" to parse "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".yaml"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".yml"}]},{"type":"text","value":" files. You can check here for "},{"type":"element","tag":"a","props":{"href":"https://github.com/nodeca/js-yaml#api","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"options"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that we force "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"json: true"}]},{"type":"text","value":" option."}]},{"type":"element","tag":"h3","props":{"id":"xml"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"xml"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module uses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"xml2js"}]},{"type":"text","value":" to parse "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".xml"}]},{"type":"text","value":" files. You can check here for "},{"type":"element","tag":"a","props":{"href":"https://www.npmjs.com/package/xml2js#options","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"options"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"csv"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"csv"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This module uses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node-csvtojson"}]},{"type":"text","value":" to parse csv files. You can check here for "},{"type":"element","tag":"a","props":{"href":"https://github.com/Keyang/node-csvtojson#parameters","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"options"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"extendparser"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"extendParser"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Object"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With this option you can define your own parsers for other file types. Also you can "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"overwrite"}]},{"type":"text","value":" the default parser!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To add your custom parser write a function that gets as an argument the content of the file and returns the extracted data."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example"}]}]},{"type":"element","tag":"code","props":{"code":"const parseTxt = file => file.split('\\n').map(line => line.trim())\n\n// in Config:\n\n{\n  extendParser: {\n    '.txt': parseTxt\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const parseTxt = file => file.split('\\n').map(line => line.trim())\n\n// in Config:\n\n{\n  extendParser: {\n    '.txt': parseTxt\n  }\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"editor"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"editor"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can provide a custom editor for editing your markdown files in development. Set the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"editor"}]},{"type":"text","value":" option to a path to your editor component. The code of the default editor you can find "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/content/blob/master/packages/content/templates/editor.vue","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"content: {\n  editor: '~/path/to/editor/component.vue'\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"content: {\n  editor: '~/path/to/editor/component.vue'\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Your component should implement the following:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"v-model"}]},{"type":"text","value":" for getting the markdown code."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"prop "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"isEditing"}]},{"type":"text","value":" is a boolean with the information if the editing is started and the component is shown. (this is optional)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"when finished editing your component has to emit "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"endEdit"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You should be aware that you get the full markdown file content so this includes the front-matter. You can use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"gray-matter"}]},{"type":"text","value":" to split and join the markdown and the front-matter."}]},{"type":"element","tag":"h3","props":{"id":"usecache"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useCache"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Default: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"false"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":", the production server ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt start"}]},{"type":"text","value":") will use cached version of the content (generated after running "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt build"}]},{"type":"text","value":") instead of parsing files. This improves app startup time, but makes app unaware of any content changes."}]},{"type":"element","tag":"h2","props":{"id":"defaults"},"children":[{"type":"text","value":"Defaults"}]},{"type":"element","tag":"code","props":{"code":"export default {\n  content: {\n    editor: '~/.nuxt/content/editor.vue',\n    apiPrefix: '_content',\n    dir: 'content',\n    fullTextSearchFields: ['title', 'description', 'slug', 'text'],\n    nestedProperties: [],\n    liveEdit: true,\n    useCache: false,\n    markdown: {\n      remarkPlugins: [\n        'remark-squeeze-paragraphs',\n        'remark-slug',\n        'remark-autolink-headings',\n        'remark-external-links',\n        'remark-footnotes'\n      ],\n      rehypePlugins: [\n        'rehype-minify-whitespace',\n        'rehype-sort-attribute-values',\n        'rehype-sort-attributes',\n        'rehype-raw'\n      ],\n      prism: {\n        theme: 'prismjs/themes/prism.css'\n      }\n    },\n    yaml: {},\n    csv: {},\n    xml: {},\n    extendParser: {}\n  }\n}\n","filename":"nuxt.config.js","language":"js"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  content: {\n    editor: '~/.nuxt/content/editor.vue',\n    apiPrefix: '_content',\n    dir: 'content',\n    fullTextSearchFields: ['title', 'description', 'slug', 'text'],\n    nestedProperties: [],\n    liveEdit: true,\n    useCache: false,\n    markdown: {\n      remarkPlugins: [\n        'remark-squeeze-paragraphs',\n        'remark-slug',\n        'remark-autolink-headings',\n        'remark-external-links',\n        'remark-footnotes'\n      ],\n      rehypePlugins: [\n        'rehype-minify-whitespace',\n        'rehype-sort-attribute-values',\n        'rehype-sort-attributes',\n        'rehype-raw'\n      ],\n      prism: {\n        theme: 'prismjs/themes/prism.css'\n      }\n    },\n    yaml: {},\n    csv: {},\n    xml: {},\n    extendParser: {}\n  }\n}\n"}]}]}]}]},"_type":"markdown","_id":"v1:v1:1.getting-started:6.configuration.md","_source":"v1","_file":"v1/1.getting-started/6.configuration.md","_extension":"md"},{"_path":"/v1/examples/basic","_draft":false,"_partial":false,"_empty":false,"title":"Basic Usage","description":"Live example of basic usage of Nuxt Content on CodeSandbox.","excerpt":{"type":"root","children":[{"type":"element","tag":"sandbox","props":{"src":"https://codesandbox.io/embed/nuxt-content-playground-l164h?hidenavigation=1&theme=dark"},"children":[]}]},"toc":false,"_type":"markdown","_id":"v1:v1:2.examples:1.basic.md","_source":"v1","_file":"v1/2.examples/1.basic.md","_extension":"md"}]